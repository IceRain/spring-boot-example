spring:
#bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
#     <property name="driverClassName" value="${jdbc.driverClassName}"/>
#     <property name="url" value="${jdbc.url}"/>
#     <property name="username" value="${jdbc.username}"/>
#     <property name="password" value="${jdbc.password}"/>
# </bean>
#等同于再xml里面配置数据源的方式
    datasource:
        name: test
        url: jdbc:mysql://127.0.0.1:3306/test
        username: root
        password: root
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20


#mybatis配置，相当于原来xml里面
#        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
#                          <property name="dataSource" ref="dataSource" />
#                          <property name="mapperLocations" value="classpath:com/liwei/ssm/mapper/*Mapper.xml" />
#                          <!-- 还可以在这里配置 typeAliases  -->
#                      </bean>
mybatis:
  mapperLocations: classpath:mapping/*.xml
  typeAliasesPackage: com.zzb.model